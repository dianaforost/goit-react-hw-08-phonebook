{"version":3,"file":"static/js/268.8ae2968a.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/PhoneBook/PhoneBook.module.css?b449","components/PhoneBook/PhoneBook.js","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/SectionFirst.js","components/Section/SectionSec.js","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","components/pages/ContactsPage.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nexport const selectContacts = state => state.contacts.items;\nexport const selectTotalContacts = state => state.contacts.total;\nexport const selectPage = state => state.contacts.page;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PhoneBook_form__snyuG\",\"inputName\":\"PhoneBook_inputName__DY-8z\",\"inputNumber\":\"PhoneBook_inputNumber__nuSwo\",\"btn\":\"PhoneBook_btn__GW+tf\"};","import React, { Suspense } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact, fetchContacts } from '../../redux/contacts/operations';\nimport { selectContacts, selectPage } from '../../redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport css from './PhoneBook.module.css';\nimport { Outlet } from 'react-router-dom';\nexport const PhoneBook = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const currentPage = useSelector(selectPage);\n  const onSubmit = e => {\n    e.preventDefault();\n    const userNameValue = e.target.elements.name.value;\n    const emailValue = e.target.elements.email.value;\n    const phoneValue = e.target.elements.phone.value;\n    const contact = {\n      name: userNameValue,\n      email: emailValue,\n      phone: phoneValue,\n    };\n    if (contacts.some(x => x.name === userNameValue)) {\n      alert(`${userNameValue} is already is contacts`);\n      return;\n    } else if (contacts.some(x => x.number === phoneValue)) {\n      alert(` Number ${phoneValue} is already is contacts`);\n      return;\n    } else {\n      dispatch(addContact(contact)).then(() => {\n        dispatch(fetchContacts({ page: currentPage }));\n      });\n      e.target.reset();\n    }\n  };\n  return (\n    <>\n      <Suspense fallback={<p>Loading</p>}>\n        <Outlet />\n      </Suspense>\n      <form onSubmit={onSubmit} className={css.form}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          className={css.inputName}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Like Name Surname\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          autoComplete=\"off\"\n          required\n        />\n        <label htmlFor=\"name\">Email</label>\n        <input\n          className={css.inputName}\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Like example@ex.com\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          autoComplete=\"off\"\n          required\n        />\n        <label htmlFor=\"number\">Number</label>\n        <input\n          className={css.inputNumber}\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"Like 111-11-11\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          autoComplete=\"off\"\n          required\n        />\n        <button type=\"submit\" className={css.btn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"title\":\"Section_title__SLHvV\",\"mainCont\":\"Section_mainCont__ddnQv\",\"titleWelcome\":\"Section_titleWelcome__tiGF7\",\"text\":\"Section_text__eiTEQ\",\"textContainer\":\"Section_textContainer__X5LAA\",\"btnBack\":\"Section_btnBack__zjoPP\",\"iconContainer\":\"Section_iconContainer__YrAsY\",\"iconContainerSec\":\"Section_iconContainerSec__SZWro\",\"icon\":\"Section_icon__6wRkh\",\"container\":\"Section_container__vEvWA\",\"formContainer\":\"Section_formContainer__J8Tjh\",\"div\":\"Section_div__kTOR9\"};","import propTypes from 'prop-types';\nimport css from './Section.module.css';\nexport const SectionFirst =({title, children}) =>{\n    return <section className={css.section}>\n        <div className={css.container}>\n            <div className={css.mainCont}>\n            <div className={css.textContainer}>\n                <h2 className={css.titleWelcome}>Welcome!</h2>\n                <p className={css.text}>Here you can add, delete and filter your own contacts!</p>\n            </div>\n        <div className={css.formContainer}>\n        <div className={css.iconContainer}>\n        <svg className={css.icon} width={30} height={30} xmlns=\"http://www.w3.org/2000/svg\" id=\"Outline\" viewBox=\"0 0 24 24\" >\n        <path d=\"M23,11H21V9a1,1,0,0,0-2,0v2H17a1,1,0,0,0,0,2h2v2a1,1,0,0,0,2,0V13h2a1,1,0,0,0,0-2Z\"/><path d=\"M9,12A6,6,0,1,0,3,6,6.006,6.006,0,0,0,9,12ZM9,2A4,4,0,1,1,5,6,4,4,0,0,1,9,2Z\"/><path d=\"M9,14a9.01,9.01,0,0,0-9,9,1,1,0,0,0,2,0,7,7,0,0,1,14,0,1,1,0,0,0,2,0A9.01,9.01,0,0,0,9,14Z\"/>\n        </svg>\n        <h2 className={css.title}>{title}</h2>\n        </div>\n        {children}\n        </div>\n        </div>\n        </div>\n    </section>\n}\nSectionFirst.propTypes = {\n    title: propTypes.string.isRequired,\n    childre: propTypes.node,\n}","import propTypes from 'prop-types';\nimport css from './Section.module.css';\nexport const SectionSec =({title, children}) =>{\n    return <section className={css.section}>\n        <div className={css.container}>\n            <div className={css.div}>\n        <h2>{title}</h2>\n        {children}\n        <div className={css.iconContainerSec}>\n        <a href='https://github.com/dianaforost' target='blank'>\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width={30} height={30} viewBox=\"0 0 512 512\" fill='#fff'>\n            <path d=\"M256.004 6.321c-141.369 0-256.004 114.609-256.004 255.999 0 113.107 73.352 209.066 175.068 242.918 12.793 2.369 17.496-5.555 17.496-12.316 0-6.102-0.24-26.271-0.348-47.662-71.224 15.488-86.252-30.205-86.252-30.205-11.641-29.588-28.424-37.458-28.424-37.458-23.226-15.889 1.755-15.562 1.755-15.562 25.7 1.805 39.238 26.383 39.238 26.383 22.836 39.135 59.888 27.82 74.502 21.279 2.294-16.543 8.926-27.84 16.253-34.232-56.865-6.471-116.638-28.425-116.638-126.516 0-27.949 10.002-50.787 26.38-68.714-2.658-6.45-11.427-32.486 2.476-67.75 0 0 21.503-6.876 70.42 26.245 20.418-5.674 42.318-8.518 64.077-8.617 21.751 0.099 43.668 2.943 64.128 8.617 48.867-33.122 70.328-26.245 70.328-26.245 13.936 35.264 5.175 61.3 2.518 67.75 16.41 17.928 26.347 40.766 26.347 68.714 0 98.327-59.889 119.975-116.895 126.312 9.182 7.945 17.362 23.523 17.362 47.406 0 34.254-0.298 61.822-0.298 70.254 0 6.814 4.611 14.797 17.586 12.283 101.661-33.888 174.921-129.813 174.921-242.884 0-141.39-114.617-255.999-255.996-255.999z\"></path>\n        </svg>\n        </a>\n        </div>\n        </div>\n        </div>\n    </section>\n}\nSectionSec.propTypes = {\n    title: propTypes.string.isRequired,\n    childre: propTypes.node,\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Contacts_list__R3QeP\",\"item\":\"Contacts_item__WTDnh\",\"itemTitle\":\"Contacts_itemTitle__ePmVL\",\"value\":\"Contacts_value__w481G\",\"btn\":\"Contacts_btn__rNftF\",\"icon\":\"Contacts_icon__1Uzfe\",\"pagination\":\"Contacts_pagination__kYMrm\",\"pageButton\":\"Contacts_pageButton__RXhUu\",\"errorText\":\"Contacts_errorText__neyLh\"};","import {\n  selectFilter,\n  selectContacts,\n  selectTotalContacts,\n} from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport css from './Contacts.module.css';\n\nexport const Contacts = () => {\n  const [page, setCurrentPage] = useState(1);\n  const contactsArray = useSelector(selectContacts);\n  const total = useSelector(selectTotalContacts);\n  const dispatch = useDispatch();\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  useEffect(() => {\n    dispatch(fetchContacts({ page: page }));\n  }, [dispatch, page]);\n  const filter = useSelector(selectFilter);\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.filter.toLowerCase().trim();\n    if (contactsArray) {\n      return contactsArray.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n    return null;\n  };\n  const filteredContacts = getFilteredContacts() || contactsArray || [];\n  const handleClick = contactId => {\n    dispatch(deleteContact(contactId)).then(() => {\n      dispatch(fetchContacts({ page: page }));\n    });\n  };\n  return (\n    <div>\n      {contactsArray === undefined || contactsArray.length === 0 ? (\n        <p className={css.errorText}>There are no contacts here yet</p>\n      ) : (\n        <ul className={css.list}>\n          {filteredContacts.length === 0 ? null : (\n            <>\n              {filteredContacts.map(contact => {\n                return (\n                  <li key={contact._id} className={css.item}>\n                    <p className={css.itemTitle}>{contact.name}:</p>\n                    <span className={css.value}>{contact.phone}</span>\n                    <button\n                      className={css.btn}\n                      type=\"button\"\n                      onClick={() => handleClick(contact._id)}\n                    >\n                      <svg\n                        className={css.icon}\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        id=\"Outline\"\n                        viewBox=\"0 0 24 24\"\n                        width={24}\n                        height={24}\n                      >\n                        <path d=\"M21,4H17.9A5.009,5.009,0,0,0,13,0H11A5.009,5.009,0,0,0,6.1,4H3A1,1,0,0,0,3,6H4V19a5.006,5.006,0,0,0,5,5h6a5.006,5.006,0,0,0,5-5V6h1a1,1,0,0,0,0-2ZM11,2h2a3.006,3.006,0,0,1,2.829,2H8.171A3.006,3.006,0,0,1,11,2Zm7,17a3,3,0,0,1-3,3H9a3,3,0,0,1-3-3V6H18Z\" />\n                        <path d=\"M10,18a1,1,0,0,0,1-1V11a1,1,0,0,0-2,0v6A1,1,0,0,0,10,18Z\" />\n                        <path d=\"M14,18a1,1,0,0,0,1-1V11a1,1,0,0,0-2,0v6A1,1,0,0,0,14,18Z\" />\n                      </svg>\n                    </button>\n                  </li>\n                );\n              })}\n            </>\n          )}\n        </ul>\n      )}\n\n      <div className={css.pagination}>\n        {Array.from({ length: Math.ceil(total / 5) }).map((_, index) => (\n          <button\n            key={index}\n            className={css.pageButton}\n            onClick={() => handlePageChange(index + 1)}\n          >\n            {index + 1}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"inputFilter\":\"Filter_inputFilter__8QMOp\",\"filterContainer\":\"Filter_filterContainer__8G57N\"};","\nimport { selectFilter } from '../../redux/contacts/selectors'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from 'redux/filtersSlice';\nimport css from './Filter.module.css'\nexport const Filter = () =>{\n    const dispatch = useDispatch()\n    const filter = useSelector(selectFilter);\n    // console.log(filter.filter);\n\n    // const onChange = (e) =>{\n    //     const filterEl = e.currentTarget.value.toLowerCase();\n    //     dispatch(setFilter(filterEl))\n    // }\n    return <div className={css.filterContainer}>\n    <label className={css.label}>Find contacts by name</label>\n    <input className={css.inputFilter} type=\"text\"\n     value={filter.filter} \n     onChange={e => dispatch(setFilter(e.currentTarget.value))}\n    ></input>\n    </div>\n};","import { PhoneBook } from 'components/PhoneBook/PhoneBook';\nimport { SectionFirst } from 'components/Section/SectionFirst';\nimport { SectionSec } from 'components/Section/SectionSec';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\n// import { useDispatch } from 'react-redux';\n// import { useEffect } from 'react';\n// import { fetchContacts } from 'redux/contacts/operations';\nexport default function ContactsPage() {\n  //   const dispatch = useDispatch();\n  //   useEffect(() => {\n  //     dispatch(fetchContacts({ page: 1 }));\n  //   }, [dispatch]);\n  return (\n    <div\n      style={{\n        height: '100vh',\n        background: '-webkit-linear-gradient(left, #3931af, #00c6ff)',\n      }}\n    >\n      <SectionFirst title=\"PhoneBook\">\n        <PhoneBook />\n      </SectionFirst>\n      <SectionSec title=\"Contacts\">\n        <Filter />\n        <Contacts />\n      </SectionSec>\n    </div>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectTotalContacts","total","selectPage","page","selectFilter","filter","contact","toLowerCase","includes","PhoneBook","dispatch","useDispatch","useSelector","currentPage","Suspense","fallback","onSubmit","e","preventDefault","userNameValue","target","elements","emailValue","email","phoneValue","phone","some","x","alert","number","addContact","then","fetchContacts","reset","className","css","htmlFor","type","placeholder","title","autoComplete","required","SectionFirst","children","width","height","xmlns","id","viewBox","d","SectionSec","href","version","fill","Contacts","useState","setCurrentPage","contactsArray","useEffect","filteredContacts","normalizedFilter","trim","getFilteredContacts","onClick","contactId","_id","deleteContact","from","Math","ceil","_","index","handlePageChange","Filter","onChange","setFilter","currentTarget","ContactsPage","style","background"],"sourceRoot":""}